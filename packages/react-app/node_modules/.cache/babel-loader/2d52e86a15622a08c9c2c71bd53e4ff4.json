{"ast":null,"code":"var _jsxFileName = \"/Users/upalc/Documents/ethglobal/project/dethLockapp/packages/react-app/src/App.jsx\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { BrowserRouter, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport { JsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\nimport \"./App.css\";\nimport { Row, Col, Button, Menu, Checkbox } from \"antd\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { useUserAddress } from \"eth-hooks\";\nimport { formatEther } from \"@ethersproject/units\";\nimport { useExchangePrice, useGasPrice, useUserProvider, useContractLoader, useContractReader, useBalance } from \"./hooks\";\nimport { Header, Account, Faucet, Ramp, Contract, GasGauge } from \"./components\";\nimport { Transactor } from \"./helpers\"; // import Hints from \"./Hints\";\n\nimport { Hints, Create, Manage } from \"./views\";\nimport { INFURA_ID } from \"./constants\"; // 😬 Sorry for all the console logging 🤡\n\nconst DEBUG = false; // 🔭 block explorer URL\n\nconst blockExplorer = \"https://etherscan.io/\"; // for xdai: \"https://blockscout.com/poa/xdai/\"\n// 🛰 providers\n\nif (DEBUG) console.log(\"📡 Connecting to Mainnet Ethereum\"); // const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n\nconst mainnetProvider = new JsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID); // ( ⚠️ Getting \"failed to meet quorum\" errors? Check your INFURA_ID)\n\nconsole.log(\"window.location.hostname\", window.location.hostname); // 🏠 Your local provider is usually pointed at your local blockchain\n\nconst localProviderUrl = \"http://\" + window.location.hostname + \":8545\"; // for xdai: https://dai.poa.network\n// as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\n\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nif (DEBUG) console.log(\"🏠 Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new JsonRpcProvider(localProviderUrlFromEnv);\n\nfunction App(props) {\n  const [injectedProvider, setInjectedProvider] = useState();\n  /* 💵 this hook will get the price of ETH from 🦄 Uniswap: */\n\n  const price = useExchangePrice(mainnetProvider); // 1 for xdai\n\n  /* 🔥 this hook will get the price of Gas from ⛽️ EtherGasStation */\n\n  const gasPrice = useGasPrice(\"fast\"); // 1000000000 for xdai\n  // For more hooks, check out 🔗eth-hooks at: https://www.npmjs.com/package/eth-hooks\n  // Use your injected provider from 🦊 Metamask or if you don't have it then instantly generate a 🔥 burner wallet.\n\n  const userProvider = useUserProvider(injectedProvider, localProvider);\n  const address = useUserAddress(userProvider); // The transactor wraps transactions and provides notificiations\n\n  const tx = Transactor(userProvider, gasPrice); // Faucet Tx can be used to send funds from the faucet\n\n  const faucetTx = Transactor(localProvider, gasPrice);\n  console.log(faucetTx); // 🏗 scaffold-eth is full of handy hooks like this one to get your balance:\n\n  const yourLocalBalance = useBalance(localProvider, address);\n  if (DEBUG) console.log(\"💵 yourLocalBalance\", yourLocalBalance ? formatEther(yourLocalBalance) : \"...\"); // just plug in different 🛰 providers to get your balance on different chains:\n  // const yourMainnetBalance = useBalance(mainnetProvider, address);\n  // if (DEBUG) console.log(\"💵 yourMainnetBalance\", yourMainnetBalance ? formatEther(yourMainnetBalance) : \"...\");\n  // Load in your local 📝 contract and read a value from it:\n\n  const readContracts = useContractLoader(localProvider);\n  if (DEBUG) console.log(\"📝 readContracts\", readContracts); // If you want to make 🔐 write transactions to your contracts, use the userProvider:\n\n  const writeContracts = useContractLoader(userProvider);\n  if (DEBUG) console.log(\"🔐 writeContracts\", writeContracts); // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n  // const mainnetDAIContract = useExternalContractLoader(mainnetProvider, DAI_ADDRESS, DAI_ABI)\n  // console.log(\"🥇DAI contract on mainnet:\",mainnetDAIContract)\n  //\n  // Then read your DAI balance like:\n  // const myMainnetBalance = useContractReader({DAI: mainnetDAIContract},\"DAI\", \"balanceOf\",[\"0x34aA3F359A9D614239015126635CE7732c18fDF3\"])\n  //\n  // keep track of a variable from the contract in the local React state:\n  // const purpose = useContractReader(readContracts,\"YourContract\", \"purpose\")\n  // console.log(\"🤗 purpose:\",purpose)\n  // 📟 Listen for broadcast events\n  // const setPurposeEvents = useEventListener(readContracts, \"YourContract\", \"SetPurpose\", localProvider, 1);\n  // console.log(\"📟 SetPurpose events:\",setPurposeEvents)\n\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"🏷 Resolved austingriffith.eth as:\",addressFromENS)\n  */\n  // const ownerNoun = useContractReader(readContracts, \"Noun\", \"_owner\");\n\n  const [modo, setModo] = useState(false); // const setCreate = useEventListener(readContracts, \"Noun\", \"WillCreated\", localProvider, 1);\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new Web3Provider(provider));\n  }, [setInjectedProvider]);\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    setRoute(window.location.pathname);\n  }, [setRoute]);\n  const [willIndex, setWillIndex] = useState(null);\n  const [redirect, setRedirect] = useState(false);\n\n  const handleWillSelected = value => {\n    setWillIndex(value + 1);\n    setRoute(\"/create\");\n    setRedirect(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    style: {\n      textAlign: \"center\"\n    },\n    selectedKeys: [route],\n    mode: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      setRoute(\"/\");\n    },\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, \"Admin\")), /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"/create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      setRoute(\"/create\");\n    },\n    to: \"/create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, \"Create\")), /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"/manage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      setRoute(\"/manage\");\n      setRedirect(false);\n      setWillIndex(null);\n    },\n    to: \"/manage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, \"Manage\")), /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"/hints\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      setRoute(\"/hints\");\n    },\n    to: \"/hints\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, \"Hints\"))), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, !modo ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }, \"Only owner of contract should see this (admin page)\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Contract, {\n    name: \"Noun\",\n    signer: userProvider.getSigner(),\n    provider: localProvider,\n    address: address,\n    blockExplorer: blockExplorer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Contract, {\n    name: \"CurlyCoin\",\n    signer: userProvider.getSigner(),\n    provider: localProvider,\n    address: address,\n    blockExplorer: blockExplorer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Contract, {\n    name: \"MoCoin\",\n    signer: userProvider.getSigner(),\n    provider: localProvider,\n    address: address,\n    blockExplorer: blockExplorer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Contract, {\n    name: \"LarryCoin\",\n    signer: userProvider.getSigner(),\n    provider: localProvider,\n    address: address,\n    blockExplorer: blockExplorer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/manage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/hints\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Hints, {\n    address: address,\n    yourLocalBalance: yourLocalBalance,\n    mainnetProvider: mainnetProvider,\n    price: price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Create, {\n    address: address,\n    userProvider: userProvider,\n    mainnetProvider: mainnetProvider,\n    localProvider: localProvider,\n    yourLocalBalance: yourLocalBalance,\n    price: price,\n    tx: tx,\n    writeContracts: writeContracts,\n    readContracts: readContracts // setCreate= {setCreate}\n    ,\n    willIndex: willIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/manage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 11\n    }\n  }, redirect ? /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 25\n    }\n  }) : \"\", /*#__PURE__*/React.createElement(Manage, {\n    subgraphUri: props.subgraphUri,\n    tx: tx,\n    writeContracts: writeContracts,\n    mainnetProvider: mainnetProvider // setCreate={setCreate}\n    ,\n    address: address,\n    readContracts: readContracts,\n    willSelector: handleWillSelected,\n    willIndex: willIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"fixed\",\n      textAlign: \"center\",\n      right: \"50%\",\n      top: 0,\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    onChange: e => {\n      setModo(e.target.checked);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }\n  }, \"App\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"fixed\",\n      textAlign: \"right\",\n      right: 0,\n      top: 0,\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Account, {\n    address: address,\n    localProvider: localProvider,\n    userProvider: userProvider,\n    mainnetProvider: mainnetProvider,\n    price: price,\n    web3Modal: web3Modal,\n    loadWeb3Modal: loadWeb3Modal,\n    logoutOfWeb3Modal: logoutOfWeb3Modal,\n    blockExplorer: blockExplorer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }\n  })), modo ? null : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"fixed\",\n      textAlign: \"left\",\n      left: 0,\n      bottom: 20,\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    align: \"middle\",\n    gutter: [4, 4],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Ramp, {\n    price: price,\n    address: address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    style: {\n      textAlign: \"center\",\n      opacity: 0.8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GasGauge, {\n    gasPrice: gasPrice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    style: {\n      textAlign: \"center\",\n      opacity: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n    },\n    size: \"large\",\n    shape: \"round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginRight: 8\n    },\n    role: \"img\",\n    \"aria-label\": \"support\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 17\n    }\n  }, \"\\uD83D\\uDCAC\"), \"Support\"))), /*#__PURE__*/React.createElement(Row, {\n    align: \"middle\",\n    gutter: [4, 4],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }\n  },\n  /*  if the local provider has a signer, let's show the faucet:  */\n  localProvider && localProvider.connection && localProvider.connection.url && localProvider.connection.url.indexOf(window.location.hostname) >= 0 && !process.env.REACT_APP_PROVIDER && price > 1 ? /*#__PURE__*/React.createElement(Faucet, {\n    localProvider: localProvider,\n    price: price,\n    ensProvider: mainnetProvider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 19\n    }\n  }) : \"\"))));\n}\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\n\n\nconst web3Modal = new Web3Modal({\n  // network: \"mainnet\", // optional\n  cacheProvider: true,\n  // optional\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      // required\n      options: {\n        infuraId: INFURA_ID\n      }\n    }\n  }\n});\n\nconst logoutOfWeb3Modal = async () => {\n  await web3Modal.clearCachedProvider();\n  setTimeout(() => {\n    window.location.reload();\n  }, 1);\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/upalc/Documents/ethglobal/project/dethLockapp/packages/react-app/src/App.jsx"],"names":["React","useCallback","useEffect","useState","BrowserRouter","Switch","Route","Link","Redirect","JsonRpcProvider","Web3Provider","Row","Col","Button","Menu","Checkbox","Web3Modal","WalletConnectProvider","useUserAddress","formatEther","useExchangePrice","useGasPrice","useUserProvider","useContractLoader","useContractReader","useBalance","Header","Account","Faucet","Ramp","Contract","GasGauge","Transactor","Hints","Create","Manage","INFURA_ID","DEBUG","blockExplorer","console","log","mainnetProvider","window","location","hostname","localProviderUrl","localProviderUrlFromEnv","process","env","REACT_APP_PROVIDER","localProvider","App","props","injectedProvider","setInjectedProvider","price","gasPrice","userProvider","address","tx","faucetTx","yourLocalBalance","readContracts","writeContracts","modo","setModo","loadWeb3Modal","provider","web3Modal","connect","cachedProvider","route","setRoute","pathname","willIndex","setWillIndex","redirect","setRedirect","handleWillSelected","value","textAlign","getSigner","subgraphUri","position","right","top","padding","e","target","checked","logoutOfWeb3Modal","left","bottom","opacity","open","marginRight","connection","url","indexOf","cacheProvider","providerOptions","walletconnect","package","options","infuraId","clearCachedProvider","setTimeout","reload"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { BrowserRouter, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport { JsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\nimport \"./App.css\";\nimport { Row, Col, Button, Menu, Checkbox } from \"antd\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { useUserAddress } from \"eth-hooks\";\nimport { formatEther } from \"@ethersproject/units\";\nimport {\n  useExchangePrice,\n  useGasPrice,\n  useUserProvider,\n  useContractLoader,\n  useContractReader,\n  useBalance,\n} from \"./hooks\";\nimport { Header, Account, Faucet, Ramp, Contract, GasGauge } from \"./components\";\nimport { Transactor } from \"./helpers\";\n// import Hints from \"./Hints\";\nimport { Hints, Create, Manage } from \"./views\";\n\nimport { INFURA_ID } from \"./constants\";\n\n// 😬 Sorry for all the console logging 🤡\nconst DEBUG = false;\n\n// 🔭 block explorer URL\nconst blockExplorer = \"https://etherscan.io/\"; // for xdai: \"https://blockscout.com/poa/xdai/\"\n\n// 🛰 providers\nif (DEBUG) console.log(\"📡 Connecting to Mainnet Ethereum\");\n// const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\nconst mainnetProvider = new JsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID);\n// ( ⚠️ Getting \"failed to meet quorum\" errors? Check your INFURA_ID)\nconsole.log(\"window.location.hostname\", window.location.hostname);\n// 🏠 Your local provider is usually pointed at your local blockchain\nconst localProviderUrl = \"http://\" + window.location.hostname + \":8545\"; // for xdai: https://dai.poa.network\n// as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nif (DEBUG) console.log(\"🏠 Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new JsonRpcProvider(localProviderUrlFromEnv);\n\nfunction App(props) {\n  const [injectedProvider, setInjectedProvider] = useState();\n  /* 💵 this hook will get the price of ETH from 🦄 Uniswap: */\n  const price = useExchangePrice(mainnetProvider); // 1 for xdai\n\n  /* 🔥 this hook will get the price of Gas from ⛽️ EtherGasStation */\n  const gasPrice = useGasPrice(\"fast\"); // 1000000000 for xdai\n\n  // For more hooks, check out 🔗eth-hooks at: https://www.npmjs.com/package/eth-hooks\n\n  // Use your injected provider from 🦊 Metamask or if you don't have it then instantly generate a 🔥 burner wallet.\n  const userProvider = useUserProvider(injectedProvider, localProvider);\n  const address = useUserAddress(userProvider);\n\n  // The transactor wraps transactions and provides notificiations\n  const tx = Transactor(userProvider, gasPrice);\n\n  // Faucet Tx can be used to send funds from the faucet\n  const faucetTx = Transactor(localProvider, gasPrice);\n  console.log(faucetTx);\n\n  // 🏗 scaffold-eth is full of handy hooks like this one to get your balance:\n  const yourLocalBalance = useBalance(localProvider, address);\n  if (DEBUG) console.log(\"💵 yourLocalBalance\", yourLocalBalance ? formatEther(yourLocalBalance) : \"...\");\n\n  // just plug in different 🛰 providers to get your balance on different chains:\n  // const yourMainnetBalance = useBalance(mainnetProvider, address);\n  // if (DEBUG) console.log(\"💵 yourMainnetBalance\", yourMainnetBalance ? formatEther(yourMainnetBalance) : \"...\");\n\n  // Load in your local 📝 contract and read a value from it:\n  const readContracts = useContractLoader(localProvider);\n  if (DEBUG) console.log(\"📝 readContracts\", readContracts);\n\n  // If you want to make 🔐 write transactions to your contracts, use the userProvider:\n  const writeContracts = useContractLoader(userProvider);\n  if (DEBUG) console.log(\"🔐 writeContracts\", writeContracts);\n\n  // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n  // const mainnetDAIContract = useExternalContractLoader(mainnetProvider, DAI_ADDRESS, DAI_ABI)\n  // console.log(\"🥇DAI contract on mainnet:\",mainnetDAIContract)\n  //\n  // Then read your DAI balance like:\n  // const myMainnetBalance = useContractReader({DAI: mainnetDAIContract},\"DAI\", \"balanceOf\",[\"0x34aA3F359A9D614239015126635CE7732c18fDF3\"])\n  //\n\n  // keep track of a variable from the contract in the local React state:\n  // const purpose = useContractReader(readContracts,\"YourContract\", \"purpose\")\n  // console.log(\"🤗 purpose:\",purpose)\n\n  // 📟 Listen for broadcast events\n  // const setPurposeEvents = useEventListener(readContracts, \"YourContract\", \"SetPurpose\", localProvider, 1);\n  // console.log(\"📟 SetPurpose events:\",setPurposeEvents)\n\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"🏷 Resolved austingriffith.eth as:\",addressFromENS)\n  */\n\n  // const ownerNoun = useContractReader(readContracts, \"Noun\", \"_owner\");\n  const [modo, setModo] = useState(false);\n\n  // const setCreate = useEventListener(readContracts, \"Noun\", \"WillCreated\", localProvider, 1);\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new Web3Provider(provider));\n  }, [setInjectedProvider]);\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    setRoute(window.location.pathname);\n  }, [setRoute]);\n\n  const [willIndex, setWillIndex] = useState(null);\n  const [redirect, setRedirect] = useState(false);\n  const handleWillSelected = value => {\n    setWillIndex(value + 1);\n    setRoute(\"/create\");\n    setRedirect(true);\n  };\n\n  return (\n    <div className=\"App\">\n      {/* ✏️ Edit the header and change the title to your project name */}\n      <Header />\n\n      <BrowserRouter>\n        <Menu style={{ textAlign: \"center\" }} selectedKeys={[route]} mode=\"horizontal\">\n          <Menu.Item key=\"/\">\n            <Link\n              onClick={() => {\n                setRoute(\"/\");\n              }}\n              to=\"/\"\n            >\n              Admin\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"/create\">\n            <Link\n              onClick={() => {\n                setRoute(\"/create\");\n              }}\n              to=\"/create\"\n            >\n              Create\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"/manage\">\n            <Link\n              onClick={() => {\n                setRoute(\"/manage\");\n                setRedirect(false);\n                setWillIndex(null);\n              }}\n              to=\"/manage\"\n            >\n              Manage\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"/hints\">\n            <Link\n              onClick={() => {\n                setRoute(\"/hints\");\n              }}\n              to=\"/hints\"\n            >\n              Hints\n            </Link>\n          </Menu.Item>\n          {/*          <Menu.Item key=\"/dethlockui\">\n            <Link onClick={()=>{setRoute(\"/dethlockui\")}} to=\"/dethlockui\">DethlockUI</Link>\n          </Menu.Item> */}\n        </Menu>\n\n        <Switch>\n          <Route exact path=\"/\">\n            {/* {address === ownerNoun || */}\n            {!modo ? (\n              <div>\n                Only owner of contract should see this (admin page)\n                <br />\n                <Contract\n                  name=\"Noun\"\n                  signer={userProvider.getSigner()}\n                  provider={localProvider}\n                  address={address}\n                  blockExplorer={blockExplorer}\n                />\n                <Contract\n                  name=\"CurlyCoin\"\n                  signer={userProvider.getSigner()}\n                  provider={localProvider}\n                  address={address}\n                  blockExplorer={blockExplorer}\n                />\n                <Contract\n                  name=\"MoCoin\"\n                  signer={userProvider.getSigner()}\n                  provider={localProvider}\n                  address={address}\n                  blockExplorer={blockExplorer}\n                />\n                <Contract\n                  name=\"LarryCoin\"\n                  signer={userProvider.getSigner()}\n                  provider={localProvider}\n                  address={address}\n                  blockExplorer={blockExplorer}\n                />\n              </div>\n            ) : (\n              <Redirect to=\"/manage\" />\n            )}\n          </Route>\n          <Route path=\"/hints\">\n            <Hints\n              address={address}\n              yourLocalBalance={yourLocalBalance}\n              mainnetProvider={mainnetProvider}\n              price={price}\n            />\n          </Route>\n          <Route path=\"/create\">\n            <Create\n              address={address}\n              userProvider={userProvider}\n              mainnetProvider={mainnetProvider}\n              localProvider={localProvider}\n              yourLocalBalance={yourLocalBalance}\n              price={price}\n              tx={tx}\n              writeContracts={writeContracts}\n              readContracts={readContracts}\n              // setCreate= {setCreate}\n              willIndex={willIndex}\n            />\n          </Route>\n          <Route path=\"/manage\">\n            {redirect ? <Redirect to=\"/create\" /> : \"\"}\n            <Manage\n              subgraphUri={props.subgraphUri}\n              tx={tx}\n              writeContracts={writeContracts}\n              mainnetProvider={mainnetProvider}\n              // setCreate={setCreate}\n              address={address}\n              readContracts={readContracts}\n              willSelector={handleWillSelected}\n              willIndex={willIndex}\n            />\n          </Route>\n          {/*          <Route path=\"/dethlockui\">\n            <DethlockUI\n              address={address}\n              userProvider={userProvider}\n              mainnetProvider={mainnetProvider}\n              localProvider={localProvider}\n              yourLocalBalance={yourLocalBalance}\n              price={price}\n              tx={tx}\n              writeContracts={writeContracts}\n              readContracts={readContracts}\n              purpose={purpose}\n              setPurposeEvents={setPurposeEvents}\n            />\n          </Route> */}\n        </Switch>\n      </BrowserRouter>\n\n      <div style={{ position: \"fixed\", textAlign: \"center\", right: \"50%\", top: 0, padding: 10 }}>\n        <Checkbox\n          onChange={e => {\n            setModo(e.target.checked);\n          }}\n        >\n          App\n        </Checkbox>\n      </div>\n\n      {/* 👨‍💼 Your account is in the top right with a wallet at connect options */}\n      <div style={{ position: \"fixed\", textAlign: \"right\", right: 0, top: 0, padding: 10 }}>\n        <Account\n          address={address}\n          localProvider={localProvider}\n          userProvider={userProvider}\n          mainnetProvider={mainnetProvider}\n          price={price}\n          web3Modal={web3Modal}\n          loadWeb3Modal={loadWeb3Modal}\n          logoutOfWeb3Modal={logoutOfWeb3Modal}\n          blockExplorer={blockExplorer}\n        />\n      </div>\n      {modo ? null : (\n        <div style={{ position: \"fixed\", textAlign: \"left\", left: 0, bottom: 20, padding: 10 }}>\n          <Row align=\"middle\" gutter={[4, 4]}>\n            <Col span={8}>\n              <Ramp price={price} address={address} />\n            </Col>\n\n            <Col span={8} style={{ textAlign: \"center\", opacity: 0.8 }}>\n              <GasGauge gasPrice={gasPrice} />\n            </Col>\n            <Col span={8} style={{ textAlign: \"center\", opacity: 1 }}>\n              <Button\n                onClick={() => {\n                  window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n                }}\n                size=\"large\"\n                shape=\"round\"\n              >\n                <span style={{ marginRight: 8 }} role=\"img\" aria-label=\"support\">\n                  💬\n                </span>\n                Support\n              </Button>\n            </Col>\n          </Row>\n\n          <Row align=\"middle\" gutter={[4, 4]}>\n            <Col span={24}>\n              {\n                /*  if the local provider has a signer, let's show the faucet:  */\n                localProvider &&\n                localProvider.connection &&\n                localProvider.connection.url &&\n                localProvider.connection.url.indexOf(window.location.hostname) >= 0 &&\n                !process.env.REACT_APP_PROVIDER &&\n                price > 1 ? (\n                  <Faucet localProvider={localProvider} price={price} ensProvider={mainnetProvider} />\n                ) : (\n                  \"\"\n                )\n              }\n            </Col>\n          </Row>\n        </div>\n      )}\n    </div>\n  );\n}\n\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\nconst web3Modal = new Web3Modal({\n  // network: \"mainnet\", // optional\n  cacheProvider: true, // optional\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        infuraId: INFURA_ID,\n      },\n    },\n  },\n});\n\nconst logoutOfWeb3Modal = async () => {\n  await web3Modal.clearCachedProvider();\n  setTimeout(() => {\n    window.location.reload();\n  }, 1);\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}