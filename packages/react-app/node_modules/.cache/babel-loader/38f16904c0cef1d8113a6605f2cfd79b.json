{"ast":null,"code":"var _jsxFileName = \"/Users/upalc/Documents/ethglobal/project/deapp/packages/react-app/src/views/Subgraph.jsx\";\n\n/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Button, Typography, Table, Input } from \"antd\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport fetch from \"isomorphic-fetch\";\nimport GraphiQL from \"graphiql\";\nimport { Address } from \"../components\";\nimport \"graphiql/graphiql.min.css\";\nconst highlight = {\n  marginLeft: 4,\n  marginRight: 8,\n  backgroundColor: \"#f9f9f9\",\n  padding: 4,\n  borderRadius: 4,\n  fontWeight: \"bolder\"\n};\n\nfunction Subgraph(props) {\n  function graphQLFetcher(graphQLParams) {\n    return fetch(props.subgraphUri, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(graphQLParams)\n    }).then(response => response.json());\n  }\n\n  const EXAMPLE_GRAPHQL = `\n  {\n    purposes(first: 25, orderBy: createdAt, orderDirection: desc) {\n      id\n      purpose\n      createdAt\n      sender {\n        id\n      }\n    }\n    senders {\n      id\n      address\n      purposeCount\n    }\n  }\n  `;\n  const EXAMPLE_GQL = gql(EXAMPLE_GRAPHQL);\n  const {\n    loading,\n    data\n  } = useQuery(EXAMPLE_GQL, {\n    pollInterval: 2500\n  });\n  const purposeColumns = [{\n    title: \"Purpose\",\n    dataIndex: \"purpose\",\n    key: \"purpose\"\n  }, {\n    title: \"Sender\",\n    key: \"id\",\n    render: record => /*#__PURE__*/React.createElement(Address, {\n      value: record.sender.id,\n      ensProvider: props.mainnetProvider,\n      fontSize: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    })\n  }, {\n    title: \"createdAt\",\n    key: \"createdAt\",\n    dataIndex: \"createdAt\",\n    render: d => new Date(d * 1000).toISOString()\n  }];\n  const [newPurpose, setNewPurpose] = useState(\"loading...\");\n  const deployWarning = /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 8,\n      padding: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, \"Warning: \\uD83E\\uDD14 Have you deployed your subgraph yet?\");\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"auto\",\n      marginTop: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"You will find that parsing/tracking events with the \", /*#__PURE__*/React.createElement(\"span\", {\n    style: highlight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 61\n    }\n  }, \"useEventListener\"), \" hook becomes a chore for every new project.\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"auto\",\n      marginTop: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Instead, you can use\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://thegraph.com/docs/introduction\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"The Graph\"), \" \", \"with \\uD83C\\uDFD7 scaffold-eth (\", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://youtu.be/T5ylzOTkn-Q\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"learn more\"), \"):\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"\\uD83D\\uDEAE\"), \"Clean up previous data:\", /*#__PURE__*/React.createElement(\"span\", {\n    style: highlight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"rm -rf docker/graph-node/data/\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, \"\\uD83D\\uDCE1\"), \"Spin up a local graph node by running\", /*#__PURE__*/React.createElement(\"span\", {\n    style: highlight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"yarn graph-run-node\"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginLeft: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, \" \", \"(requires\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://www.docker.com/products/docker-desktop\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \" \", \"Docker\"), \")\", \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, \"\\uD83D\\uDCDD\"), \"Create your \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, \"local subgraph\"), \" by running\", /*#__PURE__*/React.createElement(\"span\", {\n    style: highlight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, \"yarn graph-create-local\"), \"(only required once!)\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, \"\\uD83D\\uDEA2\"), \"Deploy your \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, \"local subgraph\"), \" by running\", /*#__PURE__*/React.createElement(\"span\", {\n    style: highlight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, \"yarn graph-ship-local\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, \"\\uD83D\\uDD8D\\uFE0F\"), \"Edit your \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 19\n    }\n  }, \"local subgraph\"), \" in\", /*#__PURE__*/React.createElement(\"span\", {\n    style: highlight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, \"packages/subgraph/src\"), \"(learn more about subgraph definition\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://thegraph.com/docs/define-a-subgraph\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, \"here\"), \")\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, \"\\uD83E\\uDD29\"), \"Deploy your \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, \"contracts and your subgraph\"), \" in one go by running\", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginLeft: 4,\n      backgroundColor: \"#f9f9f9\",\n      padding: 4,\n      borderRadius: 4,\n      fontWeight: \"bolder\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, \"yarn deploy-and-graph\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 780,\n      margin: \"auto\",\n      paddingBottom: 64\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: 32,\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: e => {\n      setNewPurpose(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      console.log(\"newPurpose\", newPurpose);\n      /* look how you call setPurpose on your contract: */\n\n      props.tx(props.writeContracts.YourContract.setPurpose(newPurpose));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, \"Set Purpose\")), data ? /*#__PURE__*/React.createElement(Table, {\n    dataSource: data.purposes,\n    columns: purposeColumns,\n    rowKey: \"id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, loading ? \"Loading...\" : deployWarning), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: 32,\n      height: 400,\n      border: \"1px solid #888888\",\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GraphiQL, {\n    fetcher: graphQLFetcher,\n    docExplorerOpen: true,\n    query: EXAMPLE_GRAPHQL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: 64\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, \"...\"));\n}\n\nexport default Subgraph;","map":{"version":3,"sources":["/Users/upalc/Documents/ethglobal/project/deapp/packages/react-app/src/views/Subgraph.jsx"],"names":["React","useState","Button","Typography","Table","Input","useQuery","gql","fetch","GraphiQL","Address","highlight","marginLeft","marginRight","backgroundColor","padding","borderRadius","fontWeight","Subgraph","props","graphQLFetcher","graphQLParams","subgraphUri","method","headers","body","JSON","stringify","then","response","json","EXAMPLE_GRAPHQL","EXAMPLE_GQL","loading","data","pollInterval","purposeColumns","title","dataIndex","key","render","record","sender","id","mainnetProvider","d","Date","toISOString","newPurpose","setNewPurpose","deployWarning","marginTop","margin","width","paddingBottom","textAlign","e","target","value","console","log","tx","writeContracts","YourContract","setPurpose","purposes","height","border"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/accessible-emoji */\n\nimport React, { useState } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Button, Typography, Table, Input } from \"antd\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport fetch from \"isomorphic-fetch\";\nimport GraphiQL from \"graphiql\";\nimport { Address } from \"../components\";\nimport \"graphiql/graphiql.min.css\";\n\nconst highlight = {\n  marginLeft: 4,\n  marginRight: 8,\n  backgroundColor: \"#f9f9f9\",\n  padding: 4,\n  borderRadius: 4,\n  fontWeight: \"bolder\",\n};\n\nfunction Subgraph(props) {\n  function graphQLFetcher(graphQLParams) {\n    return fetch(props.subgraphUri, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(graphQLParams),\n    }).then(response => response.json());\n  }\n\n  const EXAMPLE_GRAPHQL = `\n  {\n    purposes(first: 25, orderBy: createdAt, orderDirection: desc) {\n      id\n      purpose\n      createdAt\n      sender {\n        id\n      }\n    }\n    senders {\n      id\n      address\n      purposeCount\n    }\n  }\n  `;\n  const EXAMPLE_GQL = gql(EXAMPLE_GRAPHQL);\n  const { loading, data } = useQuery(EXAMPLE_GQL, { pollInterval: 2500 });\n\n  const purposeColumns = [\n    {\n      title: \"Purpose\",\n      dataIndex: \"purpose\",\n      key: \"purpose\",\n    },\n    {\n      title: \"Sender\",\n      key: \"id\",\n      render: record => <Address value={record.sender.id} ensProvider={props.mainnetProvider} fontSize={16} />,\n    },\n    {\n      title: \"createdAt\",\n      key: \"createdAt\",\n      dataIndex: \"createdAt\",\n      render: d => new Date(d * 1000).toISOString(),\n    },\n  ];\n\n  const [newPurpose, setNewPurpose] = useState(\"loading...\");\n\n  const deployWarning = (\n    <div style={{ marginTop: 8, padding: 8 }}>Warning: 🤔 Have you deployed your subgraph yet?</div>\n  );\n\n  return (\n    <>\n      <div style={{ margin: \"auto\", marginTop: 32 }}>\n        You will find that parsing/tracking events with the <span style={highlight}>useEventListener</span> hook becomes\n        a chore for every new project.\n      </div>\n      <div style={{ margin: \"auto\", marginTop: 32 }}>\n        Instead, you can use{\" \"}\n        <a href=\"https://thegraph.com/docs/introduction\" target=\"_blank\" rel=\"noopener noreferrer\">\n          The Graph\n        </a>{\" \"}\n        with 🏗 scaffold-eth (\n        <a href=\"https://youtu.be/T5ylzOTkn-Q\" target=\"_blank\" rel=\"noopener noreferrer\">\n          learn more\n        </a>\n        ):\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🚮</span>\n        Clean up previous data:\n        <span style={highlight}>rm -rf docker/graph-node/data/</span>\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>📡</span>\n        Spin up a local graph node by running\n        <span style={highlight}>yarn graph-run-node</span>\n        <span style={{ marginLeft: 4 }}>\n          {\" \"}\n          (requires{\" \"}\n          <a href=\"https://www.docker.com/products/docker-desktop\" target=\"_blank\" rel=\"noopener noreferrer\">\n            {\" \"}\n            Docker\n          </a>\n          ){\" \"}\n        </span>\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>📝</span>\n        Create your <b>local subgraph</b> by running\n        <span style={highlight}>yarn graph-create-local</span>\n        (only required once!)\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🚢</span>\n        Deploy your <b>local subgraph</b> by running\n        <span style={highlight}>yarn graph-ship-local</span>\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🖍️</span>\n        Edit your <b>local subgraph</b> in\n        <span style={highlight}>packages/subgraph/src</span>\n        (learn more about subgraph definition{\" \"}\n        <a href=\"https://thegraph.com/docs/define-a-subgraph\" target=\"_blank\" rel=\"noopener noreferrer\">\n          here\n        </a>\n        )\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🤩</span>\n        Deploy your <b>contracts and your subgraph</b> in one go by running\n        <span style={{ marginLeft: 4, backgroundColor: \"#f9f9f9\", padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          yarn deploy-and-graph\n        </span>\n      </div>\n\n      <div style={{ width: 780, margin: \"auto\", paddingBottom: 64 }}>\n        <div style={{ margin: 32, textAlign: \"right\" }}>\n          <Input\n            onChange={e => {\n              setNewPurpose(e.target.value);\n            }}\n          />\n          <Button\n            onClick={() => {\n              console.log(\"newPurpose\", newPurpose);\n              /* look how you call setPurpose on your contract: */\n              props.tx(props.writeContracts.YourContract.setPurpose(newPurpose));\n            }}\n          >\n            Set Purpose\n          </Button>\n        </div>\n\n        {data ? (\n          <Table dataSource={data.purposes} columns={purposeColumns} rowKey=\"id\" />\n        ) : (\n          <Typography>{loading ? \"Loading...\" : deployWarning}</Typography>\n        )}\n\n        <div style={{ margin: 32, height: 400, border: \"1px solid #888888\", textAlign: \"left\" }}>\n          <GraphiQL fetcher={graphQLFetcher} docExplorerOpen query={EXAMPLE_GRAPHQL} />\n        </div>\n      </div>\n\n      <div style={{ padding: 64 }}>...</div>\n    </>\n  );\n}\n\nexport default Subgraph;\n"]},"metadata":{},"sourceType":"module"}