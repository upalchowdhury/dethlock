{"ast":null,"code":"var _jsxFileName = \"/Users/upalc/Documents/ethglobal/project/deapp/packages/react-app/src/views/Hints.jsx\";\nimport React from \"react\"; // import { formatEther } from \"@ethersproject/units\";\n// import { Address, AddressInput, TokenList} from \"../components\";\n// import { fetchTokenList } from '../helpers/TokenList';\n\nexport default function Hints() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }), \"      \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginRight: 8\n    },\n    role: \"img\",\n    \"aria-label\": \"hardhat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, \"\\uD83D\\uDC77\"), \"Open 4 terminals in root folder\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 40\n    }\n  }), \"yarn run chain --- GANACHE local network\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 49\n    }\n  }), \"yarn run deploy / Copy 'packages/react-app/CopyToNoun.abi.js' content into '../react-app/src/contracts/Noun.abi.js' (if there have been changes in contract, must recopy ABI from Verb) - Copy also 'the-graph-NounABI' content into 'subgraph/abis/Nouns.json' --- Artifacts and ABIs generation\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 298\n    }\n  }), \"rm -rf docker/graph-node/data/ - yarn graph-run-node (mac/windows users: change host.internal.docker in root/docker/docker-compose.yml (refer to original line in scaffold-eth)) --- Docker node \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 202\n    }\n  }), \"- (if first time (or rm'ed data): yarn graph-create-local) - yarn graph-ship-local (every update of the-graph code) --- Create/Launch Docker graph \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 157\n    }\n  }), \"yarn start --- Server\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 30\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }), \"You should now have in /YourContract (frontpage) 4 contracts with its functions \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 89\n    }\n  }), \"You can mint the Stoodges tokens from there and send it to your burner account\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 87\n    }\n  }), \"Open an incongnito window to interact with different burner wallets\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 76\n    }\n  }), \"Feed yourself freely from the faucet\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 45\n    }\n  }), \"Ok! start creating wills with the functions, you can fund them with raw ETH\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 84\n    }\n  }), \"If you interact from components in /YourContract, remember to convert amounts to Hex (there are magic buttons!)\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 120\n    }\n  }), \"In Create there are elements for wills creation, also reference of timestamp (for a new will you need a timestamp > now)\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 129\n    }\n  }), \"In Manage you can see a simple query'er with simple interaction, filters to come!\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 90\n    }\n  }), \"Index in /Manage start from 1, if you need to interact with the will remember to index-1\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 97\n    }\n  }), \"--------------------------------------------------------------------------------------\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 95\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"PROBLEMS\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 26\n    }\n  }), \"Any reload on /Create will have a problem reading Stoodges coins addresses (this wont happen in the wild) go to any other and come back\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 144\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"TODO\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 22\n    }\n  }), \"Stoodges tokens not working (compiled ERC20 with pragma 8 required to modify transfer and approval functions(error is in those fn))\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 140\n    }\n  }), \"ERC721?? create function for token handling and receiver\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 65\n    }\n  }), \"Change /Create, assign wills data in props for updates, if null, then create\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 85\n    }\n  }), \"Finish thegraph events mappings (setDeadline and setBeneficiaries should emit index)\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 93\n    }\n  }), \"-------------------------------------\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 46\n    }\n  }), \"Then.. \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }\n  }), \"Multi pragma compiler for contracts with hardhat\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/upalc/Documents/ethglobal/project/deapp/packages/react-app/src/views/Hints.jsx"],"names":["React","Hints","margin","marginRight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAE9B,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,yBACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADd,eAEE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAb;AAAiC,IAAA,IAAI,EAAC,KAAtC;AAA4C,kBAAW,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,kDAEiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFjC,2DAG0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAH1C,oTAImS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJnS,oNAKmM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALnM,sKAMsJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANtJ,wCAOuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPvB,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,mGASkF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATlF,iGAUgF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVhF,sFAWqE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXrE,uDAYsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZtC,8FAa6E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAb7E,kIAciH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdjH,2IAe0H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAf1H,oGAgBmF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBnF,2GAiB0F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjB1F,yGAkBwF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBxF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBF,eAmBmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBnB,0JAoByI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBzI,eAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF,eAqBe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBf,sJAsBqI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBrI,2EAuB0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvB1D,+FAwB8E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxB9E,uGAyBsF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBtF,wDA0BuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BvC,0BA2BS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BT,mEA6BG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BH,CAFF,CADF;AAuCD","sourcesContent":["import React from \"react\";\n// import { formatEther } from \"@ethersproject/units\";\n// import { Address, AddressInput, TokenList} from \"../components\";\n// import { fetchTokenList } from '../helpers/TokenList';\n\nexport default function Hints() {\n\n  return (\n    <div>\n      <br />      <br />\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }} role='img' aria-label='hardhat'>👷</span>\n        Open 4 terminals in root folder<br />\n        yarn run chain --- GANACHE local network<br />\n        yarn run deploy / Copy 'packages/react-app/CopyToNoun.abi.js' content into '../react-app/src/contracts/Noun.abi.js' (if there have been changes in contract, must recopy ABI from Verb) - Copy also 'the-graph-NounABI' content into 'subgraph/abis/Nouns.json' --- Artifacts and ABIs generation<br />\n        rm -rf docker/graph-node/data/ - yarn graph-run-node (mac/windows users: change host.internal.docker in root/docker/docker-compose.yml (refer to original line in scaffold-eth)) --- Docker node <br />\n         - (if first time (or rm'ed data): yarn graph-create-local) - yarn graph-ship-local (every update of the-graph code) --- Create/Launch Docker graph <br />\n        yarn start --- Server<br />\n        <br />\n        You should now have in /YourContract (frontpage) 4 contracts with its functions <br />\n        You can mint the Stoodges tokens from there and send it to your burner account<br />\n        Open an incongnito window to interact with different burner wallets<br />\n        Feed yourself freely from the faucet<br />\n        Ok! start creating wills with the functions, you can fund them with raw ETH<br/>\n        If you interact from components in /YourContract, remember to convert amounts to Hex (there are magic buttons!)<br/>\n        In Create there are elements for wills creation, also reference of timestamp (for a new will you need a timestamp > now)<br/>\n        In Manage you can see a simple query'er with simple interaction, filters to come!<br />\n        Index in /Manage start from 1, if you need to interact with the will remember to index-1<br />\n        --------------------------------------------------------------------------------------<br/>\n        <h3>PROBLEMS</h3><br />\n        Any reload on /Create will have a problem reading Stoodges coins addresses (this wont happen in the wild) go to any other and come back<br />\n        <h3>TODO</h3><br/>\n        Stoodges tokens not working (compiled ERC20 with pragma 8 required to modify transfer and approval functions(error is in those fn))<br />\n        ERC721?? create function for token handling and receiver<br />\n        Change /Create, assign wills data in props for updates, if null, then create<br/>\n        Finish thegraph events mappings (setDeadline and setBeneficiaries should emit index)<br />\n        -------------------------------------<br/>\n        Then.. <br/>\n        Multi pragma compiler for contracts with hardhat\n         <br />\n\n      </div>\n\n\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}