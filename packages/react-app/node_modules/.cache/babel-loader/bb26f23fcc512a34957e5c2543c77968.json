{"ast":null,"code":"var _jsxFileName = \"/Users/upalc/Documents/ethglobal/project/dethLockapp/packages/react-app/src/views/Create.jsx\";\n\n/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState } from \"react\";\nimport { Button, Divider, Input, Card, DatePicker, Select } from \"antd\";\nimport { parseEther } from \"@ethersproject/units\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { Address, Balance, AddressInput, TokenInput } from \"../components\";\nconst {\n  Option\n} = Select;\nconsole.log(Option);\nexport default function Create({\n  address,\n  mainnetProvider,\n  localProvider,\n  price,\n  tx,\n  readContracts,\n  writeContracts,\n  willIndex\n}) {\n  const [beneficiaries, setBeneficiaries] = useState(null);\n  const [depositEth, setDepositEth] = useState(0);\n  const [depositValue, setDepositValue] = useState(0);\n  const [deadline, setDeadline] = useState(null); // const [editable, setEditable] = useState(true);\n\n  const [tokenAddress, setTokenAddress] = useState(null);\n  const ts = Math.floor(new Date().getTime() / 1000);\n  const QUERY_WILL = gql`\n    query Will($test: BigInt!) {\n      wills(where: { index: $test }) {\n        index\n        owner\n        beneficiary\n        deadline\n        value\n        token\n        tokenBalance\n      }\n    }\n  `;\n  const {\n    data\n  } = useQuery(QUERY_WILL, {\n    variables: {\n      test: willIndex\n    },\n    pollInterval: 2500\n  });\n  const ourTokensList = [{\n    name: \"MoCoin\",\n    address: readContracts.MoCoin.address\n  }, {\n    name: \"LarryCoin\",\n    address: readContracts.LarryCoin.address\n  }, {\n    name: \"CurlyCoin\",\n    address: readContracts.CurlyCoin.address\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, data == null ? /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Create\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Will selected: \", willIndex), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"Update\")), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"TimeLock\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      border: \"1px solid #cccccc\",\n      padding: 16,\n      width: 600,\n      margin: \"auto\",\n      marginTop: 64\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, data == null ? /*#__PURE__*/React.createElement(TokenInput, {\n    price: price,\n    ourTokensList: ourTokensList,\n    onTokenSelected: setTokenAddress,\n    onTokenValue: setDepositValue,\n    onEthValue: setDepositEth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Token: \", data.wills[0].token, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), \"Token Balance: \", data.wills[0].tokenBalance, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), \"It is needed to define tokenAddress in initialize for having it already...\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    onChange: e => {\n      setDepositValue(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    disabled: !depositValue,\n    onClick: async () => {\n      await tx({\n        to: writeContracts.Noun.address,\n        data: writeContracts.Noun.interface.encodeFunctionData(\"depositTokensToWill(uint256,address,uint256)\", [willIndex - 1, data.wills[0].token, parseEther(depositValue)])\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Deposit tokens\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    onChange: e => {\n      setDepositEth(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    disabled: !depositEth,\n    onClick: async () => {\n      await tx({\n        to: writeContracts.Noun.address,\n        value: parseEther(depositEth),\n        data: writeContracts.Noun.interface.encodeFunctionData(\"fundWillETH(uint256)\", [willIndex - 1])\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"Deposit ETH\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }), data == null ? /*#__PURE__*/React.createElement(Card, {\n    style: {\n      marginTop: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, \" DethLOCK time \"), /*#__PURE__*/React.createElement(DatePicker, {\n    onChange: e => {\n      const dateSelected = new Date(e);\n      setDeadline(Math.floor(dateSelected.getTime() / 1000));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      setDeadline(ts + 60);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, \" \", \"+1min\"))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, \"Deadline: \", new Date(data.wills[0].deadline * 1000).toISOString(), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 79\n    }\n  }), /*#__PURE__*/React.createElement(DatePicker, {\n    onChange: e => {\n      const dateSelected = new Date(e);\n      setDeadline(Math.floor(dateSelected.getTime() / 1000));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      setDeadline(ts + 60);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, \" \", \"+1min\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    disabled: !deadline,\n    onClick: async () => {\n      await tx({\n        to: writeContracts.Noun.address,\n        data: writeContracts.Noun.interface.encodeFunctionData(\"setDeadline(uint256,uint256)\", [willIndex - 1, deadline])\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, \"Set new deadline\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(AddressInput // ensProvider={props.ensProvider}\n  , {\n    placeholder: \"beneficiary\",\n    value: beneficiaries,\n    onChange: setBeneficiaries,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }), data == null ? null : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, \"Current Benefactor:\", /*#__PURE__*/React.createElement(Address, {\n    value: data.wills[0].beneficiary,\n    ensProvider: mainnetProvider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    disabled: !beneficiaries,\n    onClick: async () => {\n      await tx({\n        to: writeContracts.Noun.address,\n        data: writeContracts.Noun.interface.encodeFunctionData(\"setBeneficiary(uint256,address)\", [willIndex - 1, beneficiaries])\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, \"Change beneficiary\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }), data == null ? /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    disabled: !beneficiaries || !deadline,\n    onClick: async () => {\n      const res = await tx({\n        to: writeContracts.Noun.address,\n        value: parseEther(depositEth),\n        data: writeContracts.Noun.interface.encodeFunctionData(\"createNewWill(address, address, address, uint256)\", [address, beneficiaries, tokenAddress, deadline])\n      });\n      console.log(res);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, \"Create\") : null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }), ts || null), \"TimeLock Address:\", /*#__PURE__*/React.createElement(Address, {\n    value: readContracts ? readContracts.Noun.address : readContracts,\n    ensProvider: mainnetProvider,\n    fontSize: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Balance, {\n    address: readContracts ? readContracts.Noun.address : readContracts,\n    provider: localProvider,\n    dollarMultiplier: price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/upalc/Documents/ethglobal/project/dethLockapp/packages/react-app/src/views/Create.jsx"],"names":["React","useState","Button","Divider","Input","Card","DatePicker","Select","parseEther","useQuery","gql","Address","Balance","AddressInput","TokenInput","Option","console","log","Create","address","mainnetProvider","localProvider","price","tx","readContracts","writeContracts","willIndex","beneficiaries","setBeneficiaries","depositEth","setDepositEth","depositValue","setDepositValue","deadline","setDeadline","tokenAddress","setTokenAddress","ts","Math","floor","Date","getTime","QUERY_WILL","data","variables","test","pollInterval","ourTokensList","name","MoCoin","LarryCoin","CurlyCoin","border","padding","width","margin","marginTop","wills","token","tokenBalance","e","target","value","to","Noun","interface","encodeFunctionData","dateSelected","toISOString","beneficiary","res"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/accessible-emoji */\n\nimport React, { useState } from \"react\";\nimport { Button, Divider, Input, Card, DatePicker, Select } from \"antd\";\nimport { parseEther } from \"@ethersproject/units\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { Address, Balance, AddressInput, TokenInput } from \"../components\";\n\nconst { Option } = Select;\nconsole.log(Option);\n\nexport default function Create({\n  address,\n  mainnetProvider,\n  localProvider,\n  price,\n  tx,\n  readContracts,\n  writeContracts,\n  willIndex,\n}) {\n  const [beneficiaries, setBeneficiaries] = useState(null);\n  const [depositEth, setDepositEth] = useState(0);\n  const [depositValue, setDepositValue] = useState(0);\n  const [deadline, setDeadline] = useState(null);\n  // const [editable, setEditable] = useState(true);\n  const [tokenAddress, setTokenAddress] = useState(null);\n\n  const ts = Math.floor(new Date().getTime() / 1000);\n\n  const QUERY_WILL = gql`\n    query Will($test: BigInt!) {\n      wills(where: { index: $test }) {\n        index\n        owner\n        beneficiary\n        deadline\n        value\n        token\n        tokenBalance\n      }\n    }\n  `;\n\n  const { data } = useQuery(QUERY_WILL, { variables: { test: willIndex }, pollInterval: 2500 });\n\n  const ourTokensList = [\n    { name: \"MoCoin\", address: readContracts.MoCoin.address },\n    { name: \"LarryCoin\", address: readContracts.LarryCoin.address },\n    { name: \"CurlyCoin\", address: readContracts.CurlyCoin.address },\n  ];\n\n  return (\n    <div>\n      {data == null ? (\n        <h3>Create</h3>\n      ) : (\n        <div>\n          <p>Will selected: {willIndex}</p>\n          <h3>Update</h3>\n        </div>\n      )}\n      <h2>TimeLock</h2>\n      <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 600, margin: \"auto\", marginTop: 64 }}>\n        {data == null ? (\n          <TokenInput\n            price={price}\n            ourTokensList={ourTokensList}\n            onTokenSelected={setTokenAddress}\n            onTokenValue={setDepositValue}\n            onEthValue={setDepositEth}\n          />\n        ) : (\n          <div>\n            Token: {data.wills[0].token}\n            <br />\n            Token Balance: {data.wills[0].tokenBalance}\n            <br />\n            It is needed to define tokenAddress in initialize for having it already...\n            <br />\n            <Input\n              onChange={e => {\n                setDepositValue(e.target.value);\n              }}\n            />\n            <Button\n              disabled={!depositValue}\n              onClick={async () => {\n                await tx({\n                  to: writeContracts.Noun.address,\n                  data: writeContracts.Noun.interface.encodeFunctionData(\n                    \"depositTokensToWill(uint256,address,uint256)\",\n                    [willIndex - 1, data.wills[0].token, parseEther(depositValue)],\n                  ),\n                });\n              }}\n            >\n              Deposit tokens\n            </Button>\n            <br />\n            <Input\n              onChange={e => {\n                setDepositEth(e.target.value);\n              }}\n            />\n            <Button\n              disabled={!depositEth}\n              onClick={async () => {\n                await tx({\n                  to: writeContracts.Noun.address,\n                  value: parseEther(depositEth),\n                  data: writeContracts.Noun.interface.encodeFunctionData(\"fundWillETH(uint256)\", [willIndex - 1]),\n                });\n              }}\n            >\n              Deposit ETH\n            </Button>\n            <br />\n          </div>\n        )}\n        <Divider />\n        {data == null ? (\n          <Card style={{ marginTop: 32 }}>\n            <div style={{ marginTop: 8 }}>\n              <h3> DethLOCK time </h3>\n              <DatePicker\n                onChange={e => {\n                  const dateSelected = new Date(e);\n                  setDeadline(Math.floor(dateSelected.getTime() / 1000));\n                }}\n              />\n              <Button\n                onClick={() => {\n                  setDeadline(ts + 60);\n                }}\n              >\n                {\" \"}\n                +1min\n              </Button>\n            </div>\n          </Card>\n        ) : (\n          <div>\n            Deadline: {new Date(data.wills[0].deadline * 1000).toISOString()} <br />\n            <DatePicker\n              onChange={e => {\n                const dateSelected = new Date(e);\n                setDeadline(Math.floor(dateSelected.getTime() / 1000));\n              }}\n            />\n            <Button\n              onClick={() => {\n                setDeadline(ts + 60);\n              }}\n            >\n              {\" \"}\n              +1min\n            </Button>\n            <br />\n            <Button\n              disabled={!deadline}\n              onClick={async () => {\n                await tx({\n                  to: writeContracts.Noun.address,\n                  data: writeContracts.Noun.interface.encodeFunctionData(\"setDeadline(uint256,uint256)\", [\n                    willIndex - 1,\n                    deadline,\n                  ]),\n                });\n              }}\n            >\n              Set new deadline\n            </Button>\n            <br />\n          </div>\n        )}\n        <Divider />\n        <AddressInput\n          // ensProvider={props.ensProvider}\n          placeholder=\"beneficiary\"\n          value={beneficiaries}\n          onChange={setBeneficiaries}\n        />\n        {data == null ? null : (\n          <div>\n            Current Benefactor:\n            <Address value={data.wills[0].beneficiary} ensProvider={mainnetProvider} />\n            <br />\n            <Button\n              disabled={!beneficiaries}\n              onClick={async () => {\n                await tx({\n                  to: writeContracts.Noun.address,\n                  data: writeContracts.Noun.interface.encodeFunctionData(\"setBeneficiary(uint256,address)\", [\n                    willIndex - 1,\n                    beneficiaries,\n                  ]),\n                });\n              }}\n            >\n              Change beneficiary\n            </Button>\n            <br />\n          </div>\n        )}\n\n        <Divider />\n        {data == null ? (\n          <Button\n            type=\"primary\"\n            disabled={!beneficiaries || !deadline}\n            onClick={async () => {\n              const res = await tx({\n                to: writeContracts.Noun.address,\n                value: parseEther(depositEth),\n                data: writeContracts.Noun.interface.encodeFunctionData(\n                  \"createNewWill(address, address, address, uint256)\",\n                  [address, beneficiaries, tokenAddress, deadline],\n                ),\n              });\n              console.log(res);\n            }}\n          >\n            Create\n          </Button>\n        ) : null}\n        <br />\n        {ts || null}\n      </div>\n      TimeLock Address:\n      <Address\n        value={readContracts ? readContracts.Noun.address : readContracts}\n        ensProvider={mainnetProvider}\n        fontSize={16}\n      />{\" \"}\n      <br />\n      <Balance\n        address={readContracts ? readContracts.Noun.address : readContracts}\n        provider={localProvider}\n        dollarMultiplier={price}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}