{"ast":null,"code":"var _jsxFileName = \"/Users/upalc/Documents/ethglobal/project/deapp/packages/react-app/src/components/Address.jsx\";\nimport React from \"react\";\nimport Blockies from \"react-blockies\";\nimport { Typography, Skeleton } from \"antd\";\nimport { useLookupAddress } from \"../hooks\";\n/*\n\n  Displays an address with a blockie, links to a block explorer, and can resolve ENS\n\n  <Address\n    value={address}\n    ensProvider={mainnetProvider}\n    blockExplorer={optional_blockExplorer}\n    fontSize={optional_fontSize}\n  />\n\n*/\n\nconst {\n  Text\n} = Typography;\n\nconst blockExplorerLink = (address, blockExplorer) => `${blockExplorer || \"https://etherscan.io/\"}${\"address/\"}${address}`;\n\nexport default function Address(props) {\n  const ens = useLookupAddress(props.ensProvider, props.value);\n\n  if (!props.value) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Skeleton, {\n      avatar: true,\n      paragraph: {\n        rows: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  let displayAddress = props.value.substr(0, 6);\n\n  if (ens && ens.indexOf(\"0x\") < 0) {\n    displayAddress = ens;\n  } else if (props.size === \"short\") {\n    displayAddress += \"...\" + props.value.substr(-4);\n  } else if (props.size === \"long\") {\n    displayAddress = props.value;\n  }\n\n  const etherscanLink = blockExplorerLink(props.value, props.blockExplorer);\n\n  if (props.minimized) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        verticalAlign: \"middle\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      style: {\n        color: \"#222222\"\n      },\n      target: \"_blank\",\n      href: etherscanLink,\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Blockies, {\n      seed: props.value.toLowerCase(),\n      size: 8,\n      scale: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  let text;\n\n  if (props.onChange) {\n    text = /*#__PURE__*/React.createElement(Text, {\n      editable: {\n        onChange: props.onChange\n      },\n      copyable: {\n        text: props.value\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      style: {\n        color: \"#222222\"\n      },\n      target: \"_blank\",\n      href: etherscanLink,\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, displayAddress));\n  } else {\n    text = /*#__PURE__*/React.createElement(Text, {\n      copyable: {\n        text: props.value\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      style: {\n        color: \"#222222\"\n      },\n      target: \"_blank\",\n      href: etherscanLink,\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, displayAddress));\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      verticalAlign: \"middle\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Blockies, {\n    seed: props.value.toLowerCase(),\n    size: 8,\n    scale: props.fontSize ? props.fontSize / 7 : 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      verticalAlign: \"middle\",\n      paddingLeft: 5,\n      fontSize: props.fontSize ? props.fontSize : 28\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, text));\n}","map":{"version":3,"sources":["/Users/upalc/Documents/ethglobal/project/deapp/packages/react-app/src/components/Address.jsx"],"names":["React","Blockies","Typography","Skeleton","useLookupAddress","Text","blockExplorerLink","address","blockExplorer","Address","props","ens","ensProvider","value","rows","displayAddress","substr","indexOf","size","etherscanLink","minimized","verticalAlign","color","toLowerCase","text","onChange","fontSize","paddingLeft"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Blockies from \"react-blockies\";\nimport { Typography, Skeleton } from \"antd\";\nimport { useLookupAddress } from \"../hooks\";\n\n/*\n\n  Displays an address with a blockie, links to a block explorer, and can resolve ENS\n\n  <Address\n    value={address}\n    ensProvider={mainnetProvider}\n    blockExplorer={optional_blockExplorer}\n    fontSize={optional_fontSize}\n  />\n\n*/\n\nconst { Text } = Typography;\n\nconst blockExplorerLink = (address, blockExplorer) =>\n  `${blockExplorer || \"https://etherscan.io/\"}${\"address/\"}${address}`;\n\nexport default function Address(props) {\n  const ens = useLookupAddress(props.ensProvider, props.value);\n\n  if (!props.value) {\n    return (\n      <span>\n        <Skeleton avatar paragraph={{ rows: 1 }} />\n      </span>\n    );\n  }\n\n  let displayAddress = props.value.substr(0, 6);\n\n  if (ens && ens.indexOf(\"0x\") < 0) {\n    displayAddress = ens;\n  } else if (props.size === \"short\") {\n    displayAddress += \"...\" + props.value.substr(-4);\n  } else if (props.size === \"long\") {\n    displayAddress = props.value;\n  }\n\n  const etherscanLink = blockExplorerLink(props.value, props.blockExplorer);\n  if (props.minimized) {\n    return (\n      <span style={{ verticalAlign: \"middle\" }}>\n        <a style={{ color: \"#222222\" }} target=\"_blank\" href={etherscanLink} rel=\"noopener noreferrer\">\n          <Blockies seed={props.value.toLowerCase()} size={8} scale={2} />\n        </a>\n      </span>\n    );\n  }\n\n  let text;\n  if (props.onChange) {\n    text = (\n      <Text editable={{ onChange: props.onChange }} copyable={{ text: props.value }}>\n        <a style={{ color: \"#222222\" }} target=\"_blank\" href={etherscanLink} rel=\"noopener noreferrer\">\n          {displayAddress}\n        </a>\n      </Text>\n    );\n  } else {\n    text = (\n      <Text copyable={{ text: props.value }}>\n        <a style={{ color: \"#222222\" }} target=\"_blank\" href={etherscanLink} rel=\"noopener noreferrer\">\n          {displayAddress}\n        </a>\n      </Text>\n    );\n  }\n\n  return (\n    <span>\n      <span style={{ verticalAlign: \"middle\" }}>\n        <Blockies seed={props.value.toLowerCase()} size={8} scale={props.fontSize ? props.fontSize / 7 : 4} />\n      </span>\n      <span style={{ verticalAlign: \"middle\", paddingLeft: 5, fontSize: props.fontSize ? props.fontSize : 28 }}>\n        {text}\n      </span>\n    </span>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}