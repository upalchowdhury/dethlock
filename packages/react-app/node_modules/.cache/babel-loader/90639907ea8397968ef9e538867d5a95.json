{"ast":null,"code":"import { useState } from \"react\";\nimport { usePoller } from \"eth-hooks\";\nimport axios from \"axios\";\nexport default function useGasPrice(speed) {\n  const [gasPrice, setGasPrice] = useState();\n\n  const loadGasPrice = async () => {\n    axios.get(\"https://ethgasstation.info/json/ethgasAPI.json\").then(response => {\n      const newGasPrice = response.data[speed || \"fast\"] * 100000000;\n\n      if (newGasPrice !== gasPrice) {\n        setGasPrice(newGasPrice);\n      }\n    }).catch(error => console.log(error));\n  };\n\n  usePoller(loadGasPrice, 39999);\n  return gasPrice;\n}","map":{"version":3,"sources":["/Users/upalc/Documents/ethglobal/project/deapp/packages/react-app/src/hooks/GasPrice.js"],"names":["useState","usePoller","axios","useGasPrice","speed","gasPrice","setGasPrice","loadGasPrice","get","then","response","newGasPrice","data","catch","error","console","log"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACzC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,EAAxC;;AACA,QAAMO,YAAY,GAAG,YAAY;AAC/BL,IAAAA,KAAK,CACFM,GADH,CACO,gDADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,YAAMC,WAAW,GAAGD,QAAQ,CAACE,IAAT,CAAcR,KAAK,IAAI,MAAvB,IAAiC,SAArD;;AACA,UAAIO,WAAW,KAAKN,QAApB,EAA8B;AAC5BC,QAAAA,WAAW,CAACK,WAAD,CAAX;AACD;AACF,KAPH,EAQGE,KARH,CAQSC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CARlB;AASD,GAVD;;AAWAb,EAAAA,SAAS,CAACM,YAAD,EAAe,KAAf,CAAT;AACA,SAAOF,QAAP;AACD","sourcesContent":["import { useState } from \"react\";\nimport { usePoller } from \"eth-hooks\";\nimport axios from \"axios\";\n\nexport default function useGasPrice(speed) {\n  const [gasPrice, setGasPrice] = useState();\n  const loadGasPrice = async () => {\n    axios\n      .get(\"https://ethgasstation.info/json/ethgasAPI.json\")\n      .then(response => {\n        const newGasPrice = response.data[speed || \"fast\"] * 100000000;\n        if (newGasPrice !== gasPrice) {\n          setGasPrice(newGasPrice);\n        }\n      })\n      .catch(error => console.log(error));\n  };\n  usePoller(loadGasPrice, 39999);\n  return gasPrice;\n}\n"]},"metadata":{},"sourceType":"module"}