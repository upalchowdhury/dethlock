{"ast":null,"code":"var _jsxFileName = \"/Users/upalc/Documents/ethglobal/project/deapp/packages/react-app/src/components/TokensInput.jsx\";\nimport React, { useState } from \"react\";\nimport { Divider, Input, Card, Select } from \"antd\";\nimport { AddressInput, EtherInput, TokenList } from \".\";\nconst {\n  Option\n} = Select;\nexport default function TokenInput(props) {\n  const [tokenAddress, setTokenAddress] = useState(null);\n  const [setDepositValue] = useState(0);\n  const [depositEth, setDepositEth] = useState(0);\n  const [state, setState] = useState(\"ERC20\");\n  const tabList = [{\n    key: \"ERC20\",\n    tab: \"ERC20\"\n  }, {\n    key: \"Stoodges\",\n    tab: \"Stoodges\"\n  }, {\n    key: \"ERC721\",\n    tab: \"ERC721\"\n  }];\n  const contentList = {\n    ERC20: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, \"ERC20 Token \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(TokenList, {\n      token: tokenAddress,\n      onChange: e => {\n        setTokenAddress(e);\n        props.onTokenSelected(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    })),\n    Stoodges: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, \"Stoodges Tokens\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      style: {\n        width: 200\n      },\n      onChange: value => {\n        // console.log(value.name);\n        setTokenAddress(value);\n        props.onTokenSelected(value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, props.ourTokensList.map(d => /*#__PURE__*/React.createElement(Option, {\n      key: d.name,\n      value: d.address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, d.name))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    })),\n    ERC721: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, \"ERC721 \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(AddressInput, {\n      placeholder: \"NFT Address\",\n      value: tokenAddress,\n      onChange: setTokenAddress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }), \" - Approval\")\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      marginTop: 32,\n      width: \"100%\",\n      alignItems: \"center\"\n    } // title=\"Make it go up to txs!\"\n    ,\n    tabList: tabList,\n    activeTabKey: state.key,\n    onTabChange: key => {\n      setState({\n        key\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, contentList[state.key], \"to deposit\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), tokenAddress ? /*#__PURE__*/React.createElement(Input, {\n    style: {\n      width: \"40%\"\n    },\n    disabled: !tokenAddress,\n    onChange: e => {\n      setDepositValue(e.target.value);\n      props.onTokenValue(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }) : \"...\", /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), \"ETH\", /*#__PURE__*/React.createElement(EtherInput, {\n    price: props.price,\n    value: depositEth,\n    onChange: value => {\n      setDepositEth(value);\n      props.onEthValue(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/upalc/Documents/ethglobal/project/deapp/packages/react-app/src/components/TokensInput.jsx"],"names":["React","useState","Divider","Input","Card","Select","AddressInput","EtherInput","TokenList","Option","TokenInput","props","tokenAddress","setTokenAddress","setDepositValue","depositEth","setDepositEth","state","setState","tabList","key","tab","contentList","ERC20","e","onTokenSelected","Stoodges","width","value","ourTokensList","map","d","name","address","ERC721","marginTop","alignItems","target","onTokenValue","price","onEthValue"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Divider, Input, Card, Select } from \"antd\";\nimport { AddressInput, EtherInput, TokenList } from \".\";\n\nconst { Option } = Select;\n\nexport default function TokenInput(props) {\n  const [tokenAddress, setTokenAddress] = useState(null);\n  const [setDepositValue] = useState(0);\n  const [depositEth, setDepositEth] = useState(0);\n  const [state, setState] = useState(\"ERC20\");\n\n  const tabList = [\n    {\n      key: \"ERC20\",\n      tab: \"ERC20\",\n    },\n    {\n      key: \"Stoodges\",\n      tab: \"Stoodges\",\n    },\n    {\n      key: \"ERC721\",\n      tab: \"ERC721\",\n    },\n  ];\n\n  const contentList = {\n    ERC20: (\n      <div>\n        ERC20 Token <br />\n        <TokenList\n          token={tokenAddress}\n          onChange={e => {\n            setTokenAddress(e);\n            props.onTokenSelected(e);\n          }}\n        />\n        <br />\n      </div>\n    ),\n    Stoodges: (\n      <div>\n        Stoodges Tokens\n        <br />\n        <Select\n          style={{ width: 200 }}\n          onChange={value => {\n            // console.log(value.name);\n            setTokenAddress(value);\n            props.onTokenSelected(value);\n          }}\n        >\n          {props.ourTokensList.map(d => (\n            <Option key={d.name} value={d.address}>\n              {d.name}\n            </Option>\n          ))}\n        </Select>\n        <br />\n      </div>\n    ),\n    ERC721: (\n      <div>\n        ERC721 <br />\n        <AddressInput placeholder=\"NFT Address\" value={tokenAddress} onChange={setTokenAddress} /> - Approval\n      </div>\n    ),\n  };\n\n  return (\n    <div>\n      <Card\n        style={{ marginTop: 32, width: \"100%\", alignItems: \"center\" }}\n        // title=\"Make it go up to txs!\"\n        tabList={tabList}\n        activeTabKey={state.key}\n        onTabChange={key => {\n          setState({ key });\n        }}\n      >\n        {contentList[state.key]}\n        to deposit\n        <br />\n        {tokenAddress ? (\n          <Input\n            style={{ width: \"40%\" }}\n            disabled={!tokenAddress}\n            onChange={e => {\n              setDepositValue(e.target.value);\n              props.onTokenValue(e.target.value);\n            }}\n          />\n        ) : (\n          \"...\"\n        )}\n        <Divider />\n        ETH\n        <EtherInput\n          price={props.price}\n          value={depositEth}\n          onChange={value => {\n            setDepositEth(value);\n            props.onEthValue(value);\n          }}\n        />\n      </Card>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}