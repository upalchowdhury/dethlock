{"ast":null,"code":"var _jsxFileName = \"/Users/upalc/Documents/ethglobal/project/deapp/packages/react-app/src/components/TokenList.jsx\";\nimport React, { useState } from \"react\";\nimport { Select, Image } from \"antd\";\nimport { usePoller } from \"eth-hooks\";\nimport { defaultTokensUrl } from \"../constants\";\nconst {\n  Option\n} = Select; // return json.tokens.filter(token => token.chainId === chainId);\n\nexport default function TokenList(props) {\n  const [tokenList, setTokenList] = useState(null);\n  const [token, setToken] = useState(props.token);\n  console.log(token);\n\n  const fetchTokenList = async chainId => {\n    try {\n      const tokens = await fetch(defaultTokensUrl[chainId]).then(response => response.json()); // need to clean up repeated\n\n      setTokenList(tokens.tokens);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  usePoller(() => {\n    fetchTokenList(1);\n  }, props.pollTime ? props.pollTime : 100000);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, tokenList ? /*#__PURE__*/React.createElement(Select, {\n    style: {\n      width: 200\n    },\n    showSearch: true,\n    placeholder: \"Select a token\",\n    optionFilterProp: \"name\",\n    clearIcon: true,\n    onChange: value => {\n      setToken(value);\n      props.onChange(value);\n    },\n    filterOption: (input, option) => option.key.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, tokenList.map(d => /*#__PURE__*/React.createElement(Option, {\n    key: d.name,\n    value: d.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    width: 20,\n    src: d.logoURI,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }), d.name))) : \"Loading..\");\n}","map":{"version":3,"sources":["/Users/upalc/Documents/ethglobal/project/deapp/packages/react-app/src/components/TokenList.jsx"],"names":["React","useState","Select","Image","usePoller","defaultTokensUrl","Option","TokenList","props","tokenList","setTokenList","token","setToken","console","log","fetchTokenList","chainId","tokens","fetch","then","response","json","e","pollTime","width","value","onChange","input","option","key","toLowerCase","indexOf","map","d","name","address","logoURI"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,MAA9B;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,SAASC,gBAAT,QAAiC,cAAjC;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaJ,MAAnB,C,CACA;;AAEA,eAAe,SAASK,SAAT,CAAmBC,KAAnB,EAA0B;AACvC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACO,KAAK,CAACG,KAAP,CAAlC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AAEA,QAAMI,cAAc,GAAG,MAAMC,OAAN,IAAiB;AACtC,QAAI;AACF,YAAMC,MAAM,GAAG,MAAMC,KAAK,CAACb,gBAAgB,CAACW,OAAD,CAAjB,CAAL,CAAiCG,IAAjC,CAAsCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAAlD,CAArB,CADE,CACuF;;AACzFX,MAAAA,YAAY,CAACO,MAAM,CAACA,MAAR,CAAZ;AACD,KAHD,CAGE,OAAOK,CAAP,EAAU;AACVT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,CAAZ;AACD;AACF,GAPD;;AAQAlB,EAAAA,SAAS,CACP,MAAM;AACJW,IAAAA,cAAc,CAAC,CAAD,CAAd;AACD,GAHM,EAIPP,KAAK,CAACe,QAAN,GAAiBf,KAAK,CAACe,QAAvB,GAAkC,MAJ3B,CAAT;AAOA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,SAAS,gBACR,oBAAC,MAAD;AACE,IAAA,KAAK,EAAE;AAAEe,MAAAA,KAAK,EAAE;AAAT,KADT;AAEE,IAAA,UAAU,MAFZ;AAGE,IAAA,WAAW,EAAC,gBAHd;AAIE,IAAA,gBAAgB,EAAC,MAJnB;AAKE,IAAA,SAAS,MALX;AAME,IAAA,QAAQ,EAAEC,KAAK,IAAI;AACjBb,MAAAA,QAAQ,CAACa,KAAD,CAAR;AACAjB,MAAAA,KAAK,CAACkB,QAAN,CAAeD,KAAf;AACD,KATH;AAUE,IAAA,YAAY,EAAE,CAACE,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC,GAAP,CAAWC,WAAX,GAAyBC,OAAzB,CAAiCJ,KAAK,CAACG,WAAN,EAAjC,KAAyD,CAV5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYGrB,SAAS,CAACuB,GAAV,CAAcC,CAAC,iBACd,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,CAAC,CAACC,IAAf;AAAqB,IAAA,KAAK,EAAED,CAAC,CAACE,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,EAAd;AAAkB,IAAA,GAAG,EAAEF,CAAC,CAACG,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGH,CAAC,CAACC,IAFL,CADD,CAZH,CADQ,GAqBR,WAtBJ,CADF;AA2BD","sourcesContent":["import React, { useState } from \"react\";\nimport { Select, Image } from \"antd\";\nimport { usePoller } from \"eth-hooks\";\nimport { defaultTokensUrl } from \"../constants\";\n\nconst { Option } = Select;\n// return json.tokens.filter(token => token.chainId === chainId);\n\nexport default function TokenList(props) {\n  const [tokenList, setTokenList] = useState(null);\n  const [token, setToken] = useState(props.token);\n  console.log(token);\n\n  const fetchTokenList = async chainId => {\n    try {\n      const tokens = await fetch(defaultTokensUrl[chainId]).then(response => response.json()); // need to clean up repeated\n      setTokenList(tokens.tokens);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  usePoller(\n    () => {\n      fetchTokenList(1);\n    },\n    props.pollTime ? props.pollTime : 100000,\n  );\n\n  return (\n    <div>\n      {tokenList ? (\n        <Select\n          style={{ width: 200 }}\n          showSearch\n          placeholder=\"Select a token\"\n          optionFilterProp=\"name\"\n          clearIcon\n          onChange={value => {\n            setToken(value);\n            props.onChange(value);\n          }}\n          filterOption={(input, option) => option.key.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n        >\n          {tokenList.map(d => (\n            <Option key={d.name} value={d.address}>\n              <Image width={20} src={d.logoURI} />\n              {d.name}\n            </Option>\n          ))}\n        </Select>\n      ) : (\n        \"Loading..\"\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}